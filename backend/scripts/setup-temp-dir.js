#!/usr/bin/env node

/**
 * Script de configuration du dossier temp pour les services Python
 * Netpulse - Backend
 */

const fs = require('fs').promises;
const path = require('path');

async function setupTempDirectory() {
  const tempDir = path.join(process.cwd(), 'temp');
  
  try {
    console.log('üîß Configuration du dossier temp...');
    
    // V√©rification si le dossier existe
    try {
      await fs.access(tempDir);
      console.log('‚úÖ Dossier temp existe d√©j√†');
    } catch (error) {
      // Cr√©ation du dossier
      await fs.mkdir(tempDir, { recursive: true });
      console.log(`‚úÖ Dossier temp cr√©√©: ${tempDir}`);
    }
    
    // V√©rification des permissions
    try {
      await fs.access(tempDir, fs.constants.W_OK);
      console.log('‚úÖ Permissions d\'√©criture OK');
    } catch (error) {
      console.error('‚ùå Erreur permissions d\'√©criture sur le dossier temp');
      process.exit(1);
    }
    
    // Nettoyage des anciens fichiers temporaires (optionnel)
    try {
      const files = await fs.readdir(tempDir);
      const pythonFiles = files.filter(file => file.endsWith('.py'));
      
      if (pythonFiles.length > 0) {
        console.log(`üßπ Nettoyage de ${pythonFiles.length} fichiers Python temporaires...`);
        
        for (const file of pythonFiles) {
          const filePath = path.join(tempDir, file);
          try {
            await fs.unlink(filePath);
          } catch (error) {
            console.warn(`‚ö†Ô∏è Impossible de supprimer ${file}: ${error.message}`);
          }
        }
        console.log('‚úÖ Nettoyage termin√©');
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è Erreur lors du nettoyage: ${error.message}`);
    }
    
    console.log('üéâ Configuration du dossier temp termin√©e avec succ√®s');
    
  } catch (error) {
    console.error(`‚ùå Erreur lors de la configuration: ${error.message}`);
    process.exit(1);
  }
}

// Ex√©cution si le script est appel√© directement
if (require.main === module) {
  setupTempDirectory();
}

module.exports = { setupTempDirectory }; 